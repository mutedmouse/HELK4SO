# HELK winevent-conversions-process-cli filter conf
# HELK build Stage: Alpha
# Author: Nate Guagenti (@neu5ron)
# License: GPL-3.0

filter {

    if [event_id] {

        if [user_logon_id] =~ /^0x/ {
          mutate { add_field => { "z_logstash_pipeline" => "1543_1" } }
          mutate { gsub => [ "user_logon_id", "0x", "" ]}
          ruby {
            code => "event.set('user_logon_id', event.get('user_logon_id').to_s.hex)"
            tag_on_exception =>  "_rubyexception_1543_1"
          }
        }
        if [process_id] =~ /^0x/ {
          mutate { add_field => { "z_logstash_pipeline" => "1543_2" } }
          mutate { gsub => [ "process_id", "0x", "" ]}
          ruby {
            code => "event.set('process_id', event.get('process_id').to_s.hex)"
            tag_on_exception =>  "_rubyexception_1543_2"
          }
        }
        if [process_parent_id] =~ /^0x/ {
          mutate { add_field => { "z_logstash_pipeline" => "1543_3" } }
          mutate { gsub => [ "process_parent_id", "0x", "" ]}
          ruby {
            code => "event.set('process_parent_id', event.get('process_parent_id').to_s.hex)"
            tag_on_exception =>  "_rubyexception_1543_3"
          }
        }
        if [target_process_id] =~ /^0x/ {
          mutate { add_field => { "z_logstash_pipeline" => "1543_4" } }
          mutate { gsub => [ "target_process_id", "0x", "" ]}
          ruby {
            code => "event.set('target_process_id', event.get('target_process_id').to_s.hex)"
            tag_on_exception =>  "_rubyexception_1543_4"
          }
        }
        if [ProdessName] {
          mutate { rename => { "ProdessName" => "ProcessName" } }
        }

    }
}
